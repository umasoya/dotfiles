#
# Already loaded plugins
#

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]] # Switch ft according to the context of the cursor position
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]] # Detect ft according to the context of the cursor position
repo = 'Shougo/context_filetype.vim'

[[plugins]] # Required +python module
repo = 'editorconfig/editorconfig-vim'

[[plugins]] # Colorscheme
repo = 'jacoborus/tender.vim'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

# [[plugins]]
# repo = 'scrooloose/nerdtree'
# hook_add = '''
# nnoremap <silent><C-e> :NERDTreeToggle<CR>
# let NERDTreeShowHidden=1
# '''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  " autorun vim-indent-guide
  let g:indent_guides_enable_on_vim_startup = 1
  " disable auto-colors
  let g:indent_guides_auto_colors = 0
  " set guide size
  let g:indent_guides_guide_size = 0
  " set bg color Odd
  autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=8
  " set bg color Even
  autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=16
  " set guide start revel
  let g:indent_guides_start_level = 1
'''

[[plugins]] # brackets
repo = 'tpope/vim-surround'

# Toggle single line split to multi line / multi line join to single line
# gS/gJ
[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
  nmap ,// :TComment<CR>
  " If visual-block mode, TCommentInline
  " else TCommentBlock
  vmap <expr> ,// mode() == '<C-v>'?':TCommentInline<CR>':':TCommentBlock<CR>'
'''

[[plugins]]
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'junegunn/vim-emoji'

# enable to increment dates, times, and more
[[plugins]]
repo = 'tpope/vim-speeddating'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
" Start interactive EasyAlign in visual mode (e.g. vipga)
" Example: *vipga=*
" *v*isual-select *i*nner *p*aragraph
" Start EasyAlign cmd *ga*
" Align around *=*
xmap ga <Plug>(EasyAlign)
" Example: *gaip=*
" Start EasyAlign cmd *ga*
" Align around*=*
nmap ga <Plug>(EasyAlign)
'''

[[plugins]] #Stop making a file named like "hello.txt]" (extra character at the end!).
repo = 'tyru/stoptypofile.vim'

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''
let g:ale_linters = {
      \ 'javascript': ['eslint'],
      \ 'typescript': [],
      \ 'sh': ['bash-language-server'],
      \ 'go': ['gofmt'],
      \ 'php': ['phan', 'php-cs-fixer'],
      \ 'python': ['flake8'],
      \ }
" let g:ale_sign_column_always = 1
let g:ale_lint_on_save  = 1
let g:ale_lint_on_text_changed = 0
let g:sle_lint_on_insert_leave = 0

let g:ale_open_list = 1
" Close window when there are no errors or warnings.
let g:ale_keep_list_window_open = 0

let g:ale_list_window_size = 5
'''

[[plugins]]
repo = 'justinmk/vim-sneak'
hook_add = '''
let g:sneak#label = 1
'''

# vim-airline
# ----------
[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
let g:airline#extentions#tabline#enable = 1
let g:airline_powerline_fonts = 0

if !exists('g:airline_symbols')
	let g:airline_symbols = {}
endif

let g:airline_symbols = {
      \ 'readonly': 'RO',
      \ 'whitespace': '!',
      \ 'linenr': ' ln:',
      \ 'maxlinenr': '',
      \ 'colnr': ' cn:',
      \ 'branch': '',
      \ 'notexists': '?',
      \ 'crypt': 'cr',
      \ 'dirty': '!',
      \ }
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

# switch
# ----------
[[plugins]]
repo = 'AndrewRadev/switch.vim'
hook_add = '''
let g:switch_mapping = "-"
let g:switch_custom_definitions =
      \ [
      \   ['+', '-']
      \ ]
'''
