[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_add = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#enable_smart_case = 1
let g:deoplete#enable_camel_case =1
let g:deoplete#max_list = 50
let g:deoplete#source#attribute#min_pattern_length = 3

inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
function! s:my_cr_function()
    return (pumvisible() ? "\<C-y>" : "\<CR>")
endfunction
inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
'''

[[plugins]]
repo = 'Shougo/neco-vim'
depends = ['deoplete.nvim']

[[plugins]]
repo = 'Shougo/neco-syntax'
depends = ['deoplete.nvim']

[[plugins]]
repo = 'ujihisa/neco-look'
depends = ['deoplete.nvim']


[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
depends = ['async.vim']
hook_add = '''
source ~/.vim/toml/vim-lsp.vim
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
hook_add = '''
" tab completion
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<cr>"
" force refresh completion
imap <c-space> <Plug>(asyncomplete_force_refresh)

let g:asyncomplete_auto_popup = 1
" To enable fuzzy smart completion
let g:asyncomplete_smart_completion = 1
" remove duplicates
let g:asyncomplete_remove_duplicates = 1

" To auto close preview window when completion is done
autocmd! CompleteDone * if pumvisible() == 0 | pclose | endif

" tab to show the autocomplete
function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~ '\s'
endfunction

inoremap <silent><expr> <TAB>
  \ pumvisible() ? "\<C-n>" :
  \ <SID>check_back_space() ? "\<TAB>" :
  \ asyncomplete#force_refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
depends = ['asyncomplete.vim', 'vim-lsp']
