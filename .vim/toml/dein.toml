[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]] # Switch ft according to the context of the cursor position
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]] # Detect ft according to the context of the cursor position
repo = 'Shougo/context_filetype.vim'

[[plugins]] # Required +python module
repo = 'editorconfig/editorconfig-vim'

#[[plugins]]
#repo = 'thinca/vim-splash'
#hook_add = 'let g:splash#path = expand("$HOME/dotfiles/.vim/splash")'

[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
  " emmet expand <C-y> + ,
  let g:user_emmet_leader_key='<C-y>'
  let g:user_emmet_settings = {
        \'variables' : {
        \'lang' : 'ja'
        \},
        \}
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  let g:quickrun_config = {'*': {'split': ''}}
  " Nice and split
  set splitright
  set splitbelow
'''

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
nnoremap <silent><C-e> :NERDTreeToggle<CR>
let NERDTreeShowHidden=1
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  " autorun vim-indent-guide
  let g:indent_guides_enable_on_vim_startup = 1
  " disable auto-colors
  let g:indent_guides_auto_colors=0
  " set guide size
  let g:indent_guides_guide_size = 2
  " set bg color Odd
  autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=8
  " set bg color Even
  autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=16
  " set guide start revel
  let g:indent_guides_start_level = 2
'''

[[plugins]] # brackets
repo = 'tpope/vim-surround'

# Toggle single line split to multi line / multi line join to single line
# gS/gJ
[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
  nmap ,// :TComment<CR>
  " If visual-block mode, TCommentInline
  " else TCommentBlock
  vmap <expr> ,// mode() == '<C-v>'?':TCommentInline<CR>':':TCommentBlock<CR>'
'''

[[plugins]]
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'junegunn/vim-emoji'

[[plugins]]
repo = 'tpope/vim-speeddating'

[[plugins]] # dummy-data generator :fake#gen({keyname})
repo = 'tkhren/vim-fake'

[[plugins]]
repo = 'lilydjwg/colorizer'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
" Start interactive EasyAlign in visual mode (e.g. vipga)
" Example: *vipga=*
" *v*isual-select *i*nner *p*aragraph
" Start EasyAlign cmd *ga*
" Align around *=*
xmap ga <Plug>(EasyAlign)
" Example: *gaip=*
" Start EasyAlign cmd *ga*
" Align around*=*
nmap ga <Plug>(EasyAlign)
'''

[[plugins]] # check http status
repo = 'mattn/httpstatus-vim'

[[plugins]]
repo = 'mattn/sonictemplate-vim'
hook_add = '''
let g:sonictemplate_vim_template_dir = '~/.vim/template'
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
